{"version":3,"sources":["components/Card/index.js","components/Columns/index.js","components/Footer/index.js","components/Navbar/index.js","components/Form/LoginForm/index.js","services/logService.js","services/httpService.js","services/userService.js","components/Form/SignupForm/index.js","components/Button/index.js","components/CircleBar/index.js","components/Table/index.js","pages/Login/index.js","pages/Signup/index.js","pages/Trend/index.js","pages/Watchlist/index.js","pages/User/index.jsx","pages/Home/index.jsx","pages/About/index.jsx","pages/PageNotFound/index.jsx","App.js","registerServiceWorker.js","index.js"],"names":["TrendCard","state","tests","map","test","Card","key","id","className","Title","Company","Stock","Body","health","Health","Component","Columns","CardColumns","Footer","Navbar","expand","Navbars","fontSize","Nav","Link","href","styles","form","margin","width","inputField","borderRight","boxShadow","borderColor","icon","borderLeft","backgroundColor","switch","float","LoginForm","email","password","showPassword","handleSubmit","e","preventDefault","handlePassword","setState","handleChange","target","name","value","this","Form","style","onSubmit","Group","Label","InputGroup","FormControl","type","label","onChange","Append","Text","onClick","Check","Btns","Login","Button","init","log","error","console","axios","interceptors","response","use","respons","status","logger","toast","Promise","reject","get","post","apiEndpoint","apiUrl","register","user","http","SignupForm","verifyEmail","verifyPassword","a","async","userService","Row","as","Col","Signup","Btn","color","props","variant","role","CircleBar","data-preset","data-value","WatchTable","info","handleDelete","filter","t","_id","TableHeader","Object","keys","index","toUpperCase","ticker","sector","marketCap","option","ma","onDelete","size","Table","TableData","Trend","Watchlist","User","Home","About","PageNotFound","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e36ee3d1.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport tests from '../../model/testSector.json'\nimport { CircleBar } from 'components'\n\nimport './styles.scss'\n\nexport class TrendCard extends Component {\n  state = {\n    tests\n  }\n\n  render() {\n    return (\n      <>\n        {tests.map(test => (\n          <Card key={test.id} className='trendCard'>\n            <Card.Title>\n              {test.Company}\n              <br />({test.Stock})\n            </Card.Title>\n            <Card.Body>\n              <CircleBar health={test.Health} />\n            </Card.Body>\n          </Card>\n        ))}\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nimport { TrendCard } from 'components'\n\nimport './styles.scss'\n\nexport const Columns = () => {\n  return (\n    <CardColumns className='cardColumns'>\n      <TrendCard />\n    </CardColumns>\n  )\n}\n","import React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport './styles.scss'\n\nexport const Footer = () => {\n  return (\n    <Navbar className='footer justify-content-center' expand='lg'>\n      <small>©Trend Health</small>\n    </Navbar>\n  )\n}\n","import React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\nimport './styles.scss'\n\nexport const Navbars = () => {\n  return (\n    <Navbar className='navbar' expand='lg'>\n      <h1>\n        <TrendingUpIcon fontSize='large' />\n        Trend Health\n      </h1>\n      <Nav className='mr-auto'>\n        <Nav.Link href='/'>Home</Nav.Link>\n        <Nav.Link href='/About'>About</Nav.Link>\n        <Nav.Link href='/Login'>Login</Nav.Link>\n        <Nav.Link href='/Signup'>Signup</Nav.Link>\n        <Nav.Link href='/Watchlist'>WatchList</Nav.Link>\n        <Nav.Link href='/Trend'>Trend</Nav.Link>\n      </Nav>\n    </Navbar>\n  )\n}\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\nimport { Btns } from 'components'\n// import { Input, PasswordInput } from '../Input'\n\n// import './styles.scss'\nconst styles = {\n  form: {\n    margin: 'auto',\n    width: 800\n  },\n  inputField: {\n    borderRight: 0,\n    boxShadow: 'none',\n    borderColor: '#d5dadf'\n  },\n  icon: {\n    borderLeft: 0,\n    backgroundColor: 'white'\n  },\n  switch: {\n    float: 'left'\n  }\n}\n\nexport class LoginForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    showPassword: false\n  }\n\n  handleSubmit = e => e.preventDefault()\n\n  handlePassword = () => {\n    this.setState({ showPassword: !this.state.showPassword })\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    const { email, password } = this.state\n\n    return (\n      <Form style={styles.form} onSubmit={this.handleSubmit}>\n        <h1>Login</h1>\n        <br />\n        <Form.Group>\n          <Form.Label>Email Address</Form.Label>\n          <InputGroup>\n            <FormControl\n              name='email'\n              value={email}\n              type='email'\n              label='Email Address'\n              onChange={this.handleChange}\n              style={styles.inputField}\n            />\n          </InputGroup>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <InputGroup>\n            <FormControl\n              name='password'\n              value={password}\n              type={this.state.showPassword ? 'input' : 'password'}\n              label='Password'\n              onChange={this.handleChange}\n              style={styles.inputField}\n            />\n            <InputGroup.Append>\n              <InputGroup.Text\n                style={styles.icon}\n                onClick={this.handlePassword}\n              >\n                {this.state.showPassword ? (\n                  <VisibilityIcon />\n                ) : (\n                  <VisibilityOffIcon />\n                )}\n              </InputGroup.Text>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <Form.Check\n          style={styles.switch}\n          type='switch'\n          id='remember-password'\n          label='Remember Password'\n        />\n        <Btns.Login />\n        <Button>Sign up with GitHub</Button>\n        <Button>Sign up with Google</Button>\n      </Form>\n    )\n  }\n}\n","function init() {\r\n    //add init later if desired\r\n}\r\n\r\nfunction log(error) {\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n}","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.respons && error.response.status >= 500 && error.response.status <500;\r\n\r\n    if(!expectedError) {\r\n        logger.log(error);\r\n        toast.error(\"An unexpected error has occurred\")\r\n    }\r\n\r\n    return Promise.reject(error);\r\n})\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post\r\n\r\n}","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/user\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.email,\r\n        password: user.password,\r\n        name: \"Patrick\"\r\n    })\r\n}","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Col from 'react-bootstrap/Col'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport { Btns } from 'components'\nimport * as userService from '../../../services/userService';\n// import { Input, PasswordInput } from '../Input'\n\n// import './styles.scss'\nconst styles = {\n  form: {\n    margin: 'auto',\n    width: 800\n  },\n  inputField: {\n    boxShadow: 'none',\n    borderColor: '#d5dadf'\n  },\n  icon: {\n    borderLeft: 0,\n    backgroundColor: 'white'\n  },\n  switch:{\n    float: 'left'\n  }\n}\n\nexport class SignupForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    verifyEmail: '',\n    verifyPassword: ''\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    await userService.register(this.state);\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    const { email, password, verifyEmail, verifyPassword } = this.state\n\n    return (\n      <Form style={styles.form} onSubmit={this.handleSubmit}>\n        <h1>Sign Up</h1>\n        <br />\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>Email Address</Form.Label>\n            <InputGroup>\n              <FormControl\n                name='email'\n                value={email}\n                type='email'\n                label='Email Address'\n                onChange={this.handleChange}\n                style={styles.inputField}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group as={Col}>\n            <Form.Label>Verify Email Address</Form.Label>\n            <InputGroup>\n              <FormControl\n                name='verifyEmail'\n                value={verifyEmail}\n                type='email'\n                label='Email Address'\n                onChange={this.handleChange}\n                style={styles.inputField}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <Form.Label>Password</Form.Label>\n            <InputGroup>\n              <FormControl\n                name='password'\n                value={password}\n                type='password'\n                label='Password'\n                onChange={this.handleChange}\n                style={styles.inputField}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group as={Col}>\n            <Form.Label>Verify Password</Form.Label>\n            <InputGroup>\n              <FormControl\n                name='verifyPassword'\n                value={verifyPassword}\n                type='password'\n                label='Password'\n                onChange={this.handleChange}\n                style={styles.inputField}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n        <Form.Check style={styles.switch} type='switch' id='show-password' label='Show Password' />\n        <Btns.Signup />\n        <Button>Sign up with GitHub</Button>\n        <Button>Sign up with Google</Button>\n      </Form>\n    )\n  }\n}\n","import React from 'react'\n\nimport Button from 'react-bootstrap/Button'\n\nimport './styles.scss'\n\nconst Btn = (color, icon, props) => (\n  <Button variant={color} role='button' type='submit' {...props}>\n    {icon}\n  </Button>\n)\n\nconst Btns = {\n  Login: () => Btn('primary', 'Login'),\n  Signup: () => Btn('primary', 'Sign Up'),\n}\n\nexport { Btns }\n","import React from 'react'\n\nimport './styles.scss'\n\nexport const CircleBar = (props) => {\n  return (\n    <div\n      data-preset='circle'\n      className='ldBar label-center'\n      data-value={props.health}\n    />\n  )\n}\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport tests from '../../model/testWatchlist.json'\nimport './styles.scss'\n\nexport class WatchTable extends Component {\n  state = {\n    tests,\n    info: 'info'\n  }\n\n  handleDelete = test => {\n    const tests = this.state.tests.filter(t => t._id !== test._id)\n    this.setState({ test })\n  }\n\n  TableHeader = () => {\n    let header = Object.keys(tests[0])\n    return header.map((key, index) => {\n      return (\n        <th key={index} className={key}>\n          {key.toUpperCase()}\n        </th>\n      )\n    })\n  }\n\n  TableData() {\n    return this.state.tests.map((test, index) => {\n      const { id, ticker, sector, marketCap, health, option, ma } = test //destructuring\n      return (\n        <tr key={id}>\n          <td>{id}</td>\n          <td>{ticker}</td>\n          <td>{sector}</td>\n          <td>{marketCap}</td>\n          <td>{health}</td>\n          <td>{ma}</td>\n          <td>{option}</td>\n          <Button\n            variant='danger'\n            onDelete={() => this.handleDelete(test)}\n            size='sm'\n          >\n            X\n          </Button>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Table id='tests'>\n          {this.TableHeader()}\n          {this.TableData()}\n        </Table>\n      </>\n    )\n  }\n}\n","import React from 'react'\n\nimport { LoginForm } from 'components'\n\nexport const Login = () => <LoginForm />\n","import React from 'react'\n\nimport { SignupForm } from 'components'\n\nexport const Signup = () => <SignupForm />\n","import React from 'react'\n\nimport { Columns } from 'components'\n\nexport const Trend = () => {\n  return (\n    <Columns />\n  )\n}\n","import React, { Component } from 'react'\nimport { WatchTable } from 'components'\n\nexport class Watchlist extends Component {\n  render() {\n    return <WatchTable />\n  }\n}\n","import React from 'react'\n\nexport const User = () => {\n  return <h1>USER</h1>\n}\n","import React from 'react'\n\nexport const Home = () => {\n  return <h1>Home</h1>\n}\n","import React from 'react'\n\nexport const About = () => {\n  return <h1>About</h1>\n}\n","import React from 'react'\n\nexport const PageNotFound = () => {\n  return <h1>404 Page Not Found</h1>\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Footer, Navbars } from 'components'\nimport { Home, About, User, Login, Signup, Trend, Watchlist, PageNotFound } from './pages'\nimport { ToastContainer } from 'react-toastify';\nimport './App.scss'\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <ToastContainer>\n        <div className='App'>\n          <Navbars />\n\n          <Router>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/Watchlist' component={Watchlist} />\n              <Route exact path='/About' component={About} />\n              <Route exact path='/User' component={User} />\n              <Route exact path='/Login' component={Login} />\n              <Route exact path='/Signup' component={Signup} />\n              <Route exact path='/Trend' component={Trend} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </Router>\n\n          <Footer />\n        </div>\n      </ToastContainer>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}